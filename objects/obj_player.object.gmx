<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize variables
grav = .3;
hsp = 0;
vsp = 0;

movespeed_base = 4;
jumpspeed = 5;
jump = 0;
jumpShort = false;

movespeed = movespeed_base;

yellow = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get player input
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump_pressed = keyboard_check_pressed(vk_space);
key_jump = keyboard_check(vk_space);

//Calculate movement
move = key_left + key_right;
hsp = move * movespeed;



if (vsp &lt; 10) //Maximum fall speed
    vsp += grav;

//Jump code----------------------------
if (place_meeting(x,y+1,obj_wall)) { //If player on ground
    if (jump == 6) {
        jump = 0;
    }

    if (key_jump_pressed &amp;&amp; jump == 0) {
        jump = 1;
    }
    else if (jump &gt;= 1 &amp;&amp; jump &lt; 5) {
        if (!key_jump) {
            jumpShort = true;
        }
        jump++;
    }
    else if (jump == 5) {
        vsp = -jumpspeed;
        jumpShort = false;
        jump = 0;
        
        if (!jumpShort) {
           jump = 6;
        }
    }
}

if (jump == 6) {
    if (key_jump &amp;&amp; vspd &lt; 0) {
        vsp -= yellow/100;
    }
    else {
        jump = 0;
    }
}
//-------------------------------------

//Prevents wall overlap****************************************
if (place_meeting(x + hsp,y,obj_wall)) {
    while(!place_meeting(x + sign(hsp),y,obj_wall)) {
        x += sign(hsp);
    }
    hsp = 0;
}

if (place_meeting(x,y + vsp,obj_wall)) {
    while(!place_meeting(x,y + sign(vsp),obj_wall)) {
        y += sign(vsp);
    }
    vsp = 0;
}
//*************************************************************

//Moves player--
x += hsp;
y += vsp;
//--------------
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
